name: Publish .NET App
on:
  workflow_call:
  push:
  pull_request:
  merge_group:

env:
  PROJECT_NAME: JsonhCli
  DOTNET_VERSION: 9.x

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            { rid: win-x64, os: windows-latest },
            { rid: win-arm64, os: windows-latest },
            { rid: linux-x64, os: ubuntu-24.04 },
            { rid: linux-arm64, os: ubuntu-24.04-arm },
            { rid: osx-x64, os: macos-latest },
            { rid: osx-arm64, os: macos-latest },
          ]
    
    runs-on: ${{ matrix.target.os }}
    steps:
      # Clone this repository
      - name: Checkout
        uses: actions/checkout@v4

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Download dependencies
      - name: Download dependencies
        run: dotnet restore

      # Build app
      - name: Build app
        run: dotnet publish ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -c Release -r ${{ matrix.target.rid }} --self-contained true -o ./publish/${{ env.PROJECT_NAME }}-${{ matrix.target.rid }}/${{ matrix.target.rid }} -p:PublishSingleFile=true

      # Upload the build
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.target.rid }}
          path: ./publish/${{ env.PROJECT_NAME }}-${{ matrix.target.rid }}

  # Merges all the build artifacts together into a single artifact.
  # If you comment out this step, all the builds will be uploaded individually.
  merge:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Merge artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ env.PROJECT_NAME }}
          pattern: ${{ env.PROJECT_NAME }}-*
          delete-merged: true
